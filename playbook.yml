---
- name: Install epel-release and borg on client
  hosts: client
  become: True
  gather_facts: false
  tasks:
    - name: Install epel-release on client
      yum:
        name: epel-release
        state: present

    - name: Install borg on client
      yum:
        name: borgbackup
        state: present

    - name: deleting exist ssh keys
      shell: rm -rf /root/.ssh/id_rsa

    - name: deleting exist ssh keys
      shell: rm -rf /root/.ssh/id_rsa.pub

    - name: generate key pair
      shell: ssh-keygen -P "" -b 2048 -t rsa -f /root/.ssh/id_rsa -q -N /dev/null

    - name: fetch public key
      fetch:
        src: /root/.ssh/id_rsa.pub
        dest: /tmp/     
        flat: yes

    - name: template borg-backup.service to client
      template:
        src: templates/borg-backup.service.j2
        dest: "/etc/systemd/system/borg-backup.service"

    - name: template borg-backup.timer to client
      template:
        src: templates/borg-backup.timer.j2
        dest: "/etc/systemd/system/borg-backup.timer"
    
    - name: deleting
      shell: ssh-keyscan -H 192.168.56.240 >> ~/.ssh/known_hosts

- name: Install epel-release and borg on backup
  hosts: backup
  become: True
  gather_facts: false
  tasks:
    - name: Install epel-release on backup
      yum:
        name: epel-release
        state: present

    - name: Install borg on backup
      yum:
        name: borgbackup
        state: present

    - name: Format ext4 new disk
      community.general.filesystem:
        fstype: ext4
        dev: /dev/sdb

    - name: Create new user "Borg"
      ansible.builtin.user:
        name: borg
    
    - name: Mkdir /var/backup
      ansible.builtin.file:
        path: /var/backup
        state: directory
        mode: '0755'
        owner: borg
        group: borg

    - name: Mount filesystem to /var/backup
      ansible.posix.mount:
        path: /var/backup
        src: /dev/sdb
        fstype: ext4
        opts: rw
        state: mounted

    - name: deleting lost+found
      shell: rm -rf /var/backup/lost+found
           
    - name: .ssh directory create
      file:
        path: /home/borg/.ssh
        state: directory
        owner: borg
        group: borg

    - name: add master public key to backup
      template:
        src: /tmp/id_rsa.pub
        dest: "/home/borg/.ssh/authorized_keys"

- name: Start backup process
  hosts: client
  become: True
  gather_facts: false
  tasks:
    - name: init repo
      shell: export BORG_PASSPHRASE='play4play' && borg init  --encryption=repokey borg@192.168.56.240:/var/backup

    - name: start borg-backup timer
      systemd:
        name: borg-backup.timer
        state: restarted
        enabled: yes
        daemon_reload: yes

    - name: start borg-backup service
      systemd:
        name: borg-backup.service
        state: restarted
        enabled: yes
        daemon_reload: yes
    


    

